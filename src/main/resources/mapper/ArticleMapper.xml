<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iflyapi.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="cn.iflyapi.blog.entity.Article">
    <id column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="subject_id" jdbcType="BIGINT" property="subjectId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="article_des" jdbcType="VARCHAR" property="articleDes" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="original" jdbcType="VARCHAR" property="original" />
    <result column="view_num" jdbcType="INTEGER" property="viewNum" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.iflyapi.blog.entity.ArticleWithBLOBs">
    <result column="md_content" jdbcType="LONGVARCHAR" property="mdContent" />
    <result column="html_content" jdbcType="LONGVARCHAR" property="htmlContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, subject_id, user_id, title, article_des, cover, original, view_num, comment_num, 
    like_num, create_time, update_time, status, is_delete
  </sql>
  <sql id="Blob_Column_List">
    md_content, html_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.iflyapi.blog.entity.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cms_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.iflyapi.blog.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cms_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cms_article
    where article_id = #{articleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cms_article
    where article_id = #{articleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.iflyapi.blog.entity.ArticleExample">
    delete from cms_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.iflyapi.blog.entity.ArticleWithBLOBs">
    <selectKey keyProperty="articleId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cms_article (subject_id, user_id, title, 
      article_des, cover, original, 
      view_num, comment_num, like_num, 
      create_time, update_time, status, 
      is_delete, md_content, html_content
      )
    values (#{subjectId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{articleDes,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, #{original,jdbcType=VARCHAR}, 
      #{viewNum,jdbcType=INTEGER}, #{commentNum,jdbcType=INTEGER}, #{likeNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{isDelete,jdbcType=BIT}, #{mdContent,jdbcType=LONGVARCHAR}, #{htmlContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.iflyapi.blog.entity.ArticleWithBLOBs">
    <selectKey keyProperty="articleId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cms_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="articleDes != null">
        article_des,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="original != null">
        original,
      </if>
      <if test="viewNum != null">
        view_num,
      </if>
      <if test="commentNum != null">
        comment_num,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="mdContent != null">
        md_content,
      </if>
      <if test="htmlContent != null">
        html_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="articleDes != null">
        #{articleDes,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="original != null">
        #{original,jdbcType=VARCHAR},
      </if>
      <if test="viewNum != null">
        #{viewNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null">
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="mdContent != null">
        #{mdContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.iflyapi.blog.entity.ArticleExample" resultType="java.lang.Long">
    select count(*) from cms_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cms_article
    <set>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.articleDes != null">
        article_des = #{record.articleDes,jdbcType=VARCHAR},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.original != null">
        original = #{record.original,jdbcType=VARCHAR},
      </if>
      <if test="record.viewNum != null">
        view_num = #{record.viewNum,jdbcType=INTEGER},
      </if>
      <if test="record.commentNum != null">
        comment_num = #{record.commentNum,jdbcType=INTEGER},
      </if>
      <if test="record.likeNum != null">
        like_num = #{record.likeNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.mdContent != null">
        md_content = #{record.mdContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.htmlContent != null">
        html_content = #{record.htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cms_article
    set article_id = #{record.articleId,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      article_des = #{record.articleDes,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      original = #{record.original,jdbcType=VARCHAR},
      view_num = #{record.viewNum,jdbcType=INTEGER},
      comment_num = #{record.commentNum,jdbcType=INTEGER},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=BIT},
      md_content = #{record.mdContent,jdbcType=LONGVARCHAR},
      html_content = #{record.htmlContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cms_article
    set article_id = #{record.articleId,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      article_des = #{record.articleDes,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      original = #{record.original,jdbcType=VARCHAR},
      view_num = #{record.viewNum,jdbcType=INTEGER},
      comment_num = #{record.commentNum,jdbcType=INTEGER},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.iflyapi.blog.entity.ArticleWithBLOBs">
    update cms_article
    <set>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="articleDes != null">
        article_des = #{articleDes,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="original != null">
        original = #{original,jdbcType=VARCHAR},
      </if>
      <if test="viewNum != null">
        view_num = #{viewNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null">
        comment_num = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="mdContent != null">
        md_content = #{mdContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        html_content = #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.iflyapi.blog.entity.ArticleWithBLOBs">
    update cms_article
    set subject_id = #{subjectId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      article_des = #{articleDes,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      original = #{original,jdbcType=VARCHAR},
      view_num = #{viewNum,jdbcType=INTEGER},
      comment_num = #{commentNum,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=BIT},
      md_content = #{mdContent,jdbcType=LONGVARCHAR},
      html_content = #{htmlContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.iflyapi.blog.entity.Article">
    update cms_article
    set subject_id = #{subjectId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      article_des = #{articleDes,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      original = #{original,jdbcType=VARCHAR},
      view_num = #{viewNum,jdbcType=INTEGER},
      comment_num = #{commentNum,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=BIT}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
</mapper>